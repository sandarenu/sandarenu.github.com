<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Sandarenu&#39;s Blog</title>
    <link>http://example.org/tags/java/</link>
    <description>Recent content in Java on Sandarenu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2016</copyright>
    <lastBuildDate>Fri, 22 Jan 2016 16:11:49 +0530</lastBuildDate>
    
	<atom:link href="http://example.org/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding Guava Lists.transform()</title>
      <link>http://example.org/posts/understanding-guava-lists-transform/</link>
      <pubDate>Fri, 22 Jan 2016 16:11:49 +0530</pubDate>
      
      <guid>http://example.org/posts/understanding-guava-lists-transform/</guid>
      <description>Guava is a wonderful library by Google. Before Java 8 Guava was one of the best ways to use functional programming in Java.
I&amp;rsquo;ve being using Guava in one of my projects and came accross an strance issue reasontly. I had a list of items and I wanted to convert them to different object and filter some of those items.
After filtering I was changing some values in the list items.</description>
    </item>
    
    <item>
      <title>Easy way to Mock REST services</title>
      <link>http://example.org/posts/easy_way_to_mock_rest_services/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/easy_way_to_mock_rest_services/</guid>
      <description>These days we are working more and more with REST web services. Most of the times we are writing clients to access 3rd party sevices hosted in a remote server or even local services. Sometimes in large teams one group is developing the server and other group is writing the clients to use them. In such situations client team might need to test their clients without the availablity of the real service.</description>
    </item>
    
    <item>
      <title>Caution with Java Autoboxing</title>
      <link>http://example.org/posts/caution_with_java_autoboxing/</link>
      <pubDate>Thu, 05 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/caution_with_java_autoboxing/</guid>
      <description>In Java Boxing means when you convert a primitive type to a reference type. So when you have some thing like
Boolean object is converted to primitive type boolean. So how this happens under the hood? Java compiler uses the method booleanValue() in Boolean class to get the primitive value. This is where you have to be careful; there is a possibility of NPE when the Boolean object is null.</description>
    </item>
    
  </channel>
</rss>